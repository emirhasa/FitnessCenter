// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seminarski_fitness_centar_IB130116.DB;

namespace WebApp_F.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("MasterAdmin");

                    b.Property<int>("UserId");

                    b.HasKey("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Admini");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Adresa", b =>
                {
                    b.Property<int>("AdresaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Broj");

                    b.Property<int>("KontaktId");

                    b.Property<int>("OpstinaId");

                    b.Property<string>("Ulica");

                    b.HasKey("AdresaId");

                    b.HasIndex("KontaktId");

                    b.HasIndex("OpstinaId");

                    b.ToTable("Adrese");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.DolazakOdlazak", b =>
                {
                    b.Property<int>("DolazakOdlazakId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.Property<DateTime>("VrijemeDolaska");

                    b.Property<DateTime>("VrijemeOdlaska");

                    b.HasKey("DolazakOdlazakId");

                    b.HasIndex("UserId");

                    b.ToTable("DolasciOdlasci");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.Property<string>("PostanskiBroj");

                    b.HasKey("GradId");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Kontakt", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltEmail");

                    b.Property<string>("Mobitel");

                    b.Property<string>("Mobitel2");

                    b.Property<string>("Telefon");

                    b.Property<int>("UserId");

                    b.HasKey("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Kontakti");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.MailPotvrda", b =>
                {
                    b.Property<int>("PotvrdaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("KonfirmacijskiKod");

                    b.HasKey("PotvrdaId");

                    b.ToTable("MailPotvrde");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Obavjestenje", b =>
                {
                    b.Property<int>("ObavjestenjeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naslov")
                        .IsRequired();

                    b.Property<string>("Tekst")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.Property<DateTime>("Vrijeme");

                    b.HasKey("ObavjestenjeId");

                    b.HasIndex("UserId");

                    b.ToTable("Obavjestenja");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Opstina", b =>
                {
                    b.Property<int>("OpstinaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GradId");

                    b.Property<string>("Naziv");

                    b.HasKey("OpstinaId");

                    b.HasIndex("GradId");

                    b.ToTable("Opstine");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.TwoFactorAuthentication", b =>
                {
                    b.Property<int>("AuthenticationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KonfirmacijskiKod");

                    b.Property<int>("UserId");

                    b.Property<DateTime>("VrijemeSlanja");

                    b.HasKey("AuthenticationId");

                    b.HasIndex("UserId");

                    b.ToTable("Autentifikacije");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("EmailConfirm");

                    b.Property<string>("Password");

                    b.Property<int>("Role");

                    b.Property<int>("TwoFactorAuthentication");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Zaposlenik", b =>
                {
                    b.Property<int>("ZaposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.HasKey("ZaposlenikId");

                    b.HasIndex("UserId");

                    b.ToTable("Zaposlenici");
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Admin", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Adresa", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.Kontakt", "Kontakt")
                        .WithMany()
                        .HasForeignKey("KontaktId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.Opstina", "Opstina")
                        .WithMany()
                        .HasForeignKey("OpstinaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.DolazakOdlazak", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Kontakt", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Obavjestenje", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Opstina", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.TwoFactorAuthentication", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Seminarski_fitness_centar_IB130116.Models.Zaposlenik", b =>
                {
                    b.HasOne("Seminarski_fitness_centar_IB130116.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
